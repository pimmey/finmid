// This file is auto-generated by @hey-api/openapi-ts

export type User = {
  id?: string;
  name?: string;
  email?: string;
  profileImage?: string;
};

export type SME = {
  id?: string;
  legalName?: string;
  businessType?: 'GMBH' | 'EINZELUNTERNEHMEN';
};

export type businessType = 'GMBH' | 'EINZELUNTERNEHMEN';

export const businessType = {
  GMBH: 'GMBH',
  EINZELUNTERNEHMEN: 'EINZELUNTERNEHMEN',
} as const;

export type Transaction = {
  id?: string;
  smeId?: string;
  amount?: string;
  status?: 'REJECTED' | 'PENDING' | 'COMPLETED' | 'REVERSED';
  userId?: string;
  transactionTime?: string;
  merchantIconUrl?: string;
  merchantName?: string;
  currency?: 'USD' | 'EUR';
  rejectionReason?:
    | (
        | 'NOT_PERMITTED'
        | 'INSUFFICIENT_FUNDS'
        | 'CARD_MONTHLY_LIMIT_REACHED'
        | 'CARD_DAILY_LIMIT_REACHED'
        | 'CARD_EXPIRED'
        | 'CARD_SUSPENDED'
        | 'CARD_NOT_ACTIVE'
        | 'INCORRECT_PIN'
      )
    | null;
};

export type status = 'REJECTED' | 'PENDING' | 'COMPLETED' | 'REVERSED';

export const status = {
  REJECTED: 'REJECTED',
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  REVERSED: 'REVERSED',
} as const;

export type currency = 'USD' | 'EUR';

export const currency = {
  USD: 'USD',
  EUR: 'EUR',
} as const;

export type rejectionReason =
  | 'NOT_PERMITTED'
  | 'INSUFFICIENT_FUNDS'
  | 'CARD_MONTHLY_LIMIT_REACHED'
  | 'CARD_DAILY_LIMIT_REACHED'
  | 'CARD_EXPIRED'
  | 'CARD_SUSPENDED'
  | 'CARD_NOT_ACTIVE'
  | 'INCORRECT_PIN';

export const rejectionReason = {
  NOT_PERMITTED: 'NOT_PERMITTED',
  INSUFFICIENT_FUNDS: 'INSUFFICIENT_FUNDS',
  CARD_MONTHLY_LIMIT_REACHED: 'CARD_MONTHLY_LIMIT_REACHED',
  CARD_DAILY_LIMIT_REACHED: 'CARD_DAILY_LIMIT_REACHED',
  CARD_EXPIRED: 'CARD_EXPIRED',
  CARD_SUSPENDED: 'CARD_SUSPENDED',
  CARD_NOT_ACTIVE: 'CARD_NOT_ACTIVE',
  INCORRECT_PIN: 'INCORRECT_PIN',
} as const;

export type BadRequest = {
  error?: string;
  message?: string;
};

export type UnauthorizedError = {
  error?: string;
  message?: string;
};

export type PostLoginData = {
  requestBody: {
    email?: string;
    password?: string;
  };
};

export type PostLoginResponse = {
  token?: string;
};

export type GetUsersResponse = Array<User>;

export type GetSmeDataResponse = SME;

export type GetTransactionsData = {
  /**
   * Limits the list by a specific number. Sometimes called `perPage`
   */
  limit?: number;
  offset?: number;
  /**
   * The status of the transactions we want to filter by.
   */
  status?: 'REJECTED' | 'PENDING' | 'COMPLETED' | 'REVERSED';
  /**
   * UUID of a specific user
   */
  userId?: string;
};

export type GetTransactionsResponse = {
  data?: Array<Transaction>;
  meta?: {
    limit?: number;
    offset?: number;
    status?: 'REJECTED' | 'PENDING' | 'COMPLETED' | 'REVERSED';
    userId?: string;
    smeId?: string;
    total?: number;
  };
};
